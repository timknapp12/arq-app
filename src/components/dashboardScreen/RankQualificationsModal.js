import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components/native';
import { Modal, TouchableOpacity, View } from 'react-native';
import {
  ScreenContainer,
  H6Secondary,
  Flexbox,
  MainScrollView,
  Header,
  H3,
  H5Heavy,
  H6Heavy,
  Gap,
  CloseIcon,
} from '../common';
import { Localized } from '../../translations/Localized';

const Divider = styled.View`
  width: 100%;
  height: 1px;
  background-color: ${(props) => props.theme.secondaryTextColor};
`;

const RankQualificationsModal = ({ visible, onClose }) => {
  return (
    <Modal
      animationType="slide"
      transparent={false}
      visible={visible}
      statusBarTranslucent={true}
      onRequestClose={onClose}
    >
      <ScreenContainer
        style={{
          justifyContent: 'flex-start',
          padding: 12,
        }}
      >
        <Header>
          <TouchableOpacity
            style={{ padding: 8 }}
            testID="rank-qualification-close-modal-button"
            onPress={onClose}
          >
            <CloseIcon />
          </TouchableOpacity>
          <H3>{Localized('Rank Qualification').toUpperCase()}</H3>
          <View style={{ width: 14 }} />
        </Header>
        <Divider />

        <MainScrollView paddingBottom={0}>
          <Flexbox
            justify="flex-start"
            align="flex-start"
            padding={20}
            height="100%"
          >
            <H5Heavy>{Localized('OV Rank')}</H5Heavy>
            <Gap height="12px" />
            <H6Heavy>{`1. ${Localized('Personal Volume (PV)')}`}</H6Heavy>
            <Gap height="12px" />
            <H6Secondary>{`${Localized(
              'The total volume of all personal product sales generated by the Ambassador.',
            )} ${Localized(
              'If personal orders do not cover the required Personal Volume (PV), Customer Volume (CV) is utilized to make up the difference.',
            )}`}</H6Secondary>
            <Gap height="12px" />
            <H6Heavy>{`2. ${Localized(
              'Personally Active Ambassador (PA)',
            )}`}</H6Heavy>
            <Gap height="12px" />
            <H6Secondary>
              {Localized(
                'An Ambassador, personally sponsored, who maintains a monthly minimum of 100 PV.',
              )}
            </H6Secondary>
            <Gap height="12px" />
            <H6Heavy>{`3. ${Localized(
              'Qualified Organizational Volume (QOV)',
            )}`}</H6Heavy>
            <Gap height="12px" />
            <H6Secondary>{`${Localized(
              'Organizational Volume after the maximum percentage of volume or Max Leg Percentages (ML%) have been applied to an Ambassador’s legs.',
            )} ${Localized(
              'QOV qualifies an Ambassador for OV Rank.',
            )} ${Localized(
              'Personal and Customer Volumes are not included in the calculation of Qualified Organizational Volume.',
            )}`}</H6Secondary>
            <Gap height="24px" />

            <H5Heavy>{Localized('CV Rank')}</H5Heavy>
            <Gap height="12px" />
            <H6Heavy>{`1. ${Localized('Personal Volume (PV)')}`}</H6Heavy>
            <Gap height="12px" />
            <H6Secondary>{`${Localized(
              'The total volume of all personal product sales generated by the Ambassador.',
            )} ${Localized(
              'If personal orders do not cover the required Personal Volume (PV), Customer Volume (CV) is utilized to make up the difference.',
            )}`}</H6Secondary>
            <Gap height="12px" />
            <H6Heavy>{`2. ${Localized('Customer Volume (CV)')}`}</H6Heavy>
            <Gap height="12px" />
            <H6Secondary>
              {Localized(
                'The total volume of all commissionable product sales generated by an Ambassador’s Retail and Preferred Customers.',
              )}
            </H6Secondary>
          </Flexbox>
        </MainScrollView>
      </ScreenContainer>
    </Modal>
  );
};

RankQualificationsModal.propTypes = {
  visible: PropTypes.bool.isRequired,
  onClose: PropTypes.func.isRequired,
};

export default RankQualificationsModal;
